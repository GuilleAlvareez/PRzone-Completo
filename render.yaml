# Blueprint de Render para la aplicación PRzone
# Versión con la corrección final para el servicio de proxy.

services:
  # 1. Servicio del Backend (Node.js)
  - type: web
    name: backend
    env: docker
    repo: https://github.com/GuilleAlvareez/PRzone-Completo
    dockerfilePath: ./backend/Dockerfile
    envVars:
      - key: NODE_ENV
        value: production
      - key: BETTER_AUTH_URL
        fromService:
          type: web
          name: proxy
          property: url
      - key: CLIENT_URL
        fromService:
          type: web
          name: proxy
          property: url
      - key: DB_HOST
        value: "aws.connect.psdb.cloud"
      - key: DB_PORT
        value: "3306"
      - key: DB_USER
        value: "p0eykwvk68h8pi7u5bia"
      - key: DB_NAME
        value: "przone"
      - key: model
        value: "mistralai/devstral-small:free"
      # --- CLAVES SECRETAS (configurar en el Dashboard de Render) ---
      - key: BETTER_AUTH_SECRET
        sync: false
      - key: API_KEY
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: DATABASE_URL
        sync: false

  # 2. Servicio del Frontend (React servido por Nginx)
  - type: web
    name: frontend
    env: docker
    repo: https://github.com/GuilleAlvareez/PRzone-Completo
    dockerfilePath: ./frontend/Dockerfile

  # 3. Servicio del Proxy Inverso (Nginx) - ¡CORREGIDO!
  - type: web
    name: proxy
    env: image # <-- CAMBIO 1: Usamos 'image' en lugar de 'docker'
    repo: https://github.com/GuilleAlvareez/PRzone-Completo # Lo mantenemos para que se actualice con los commits
    image:
      url: nginx:alpine # <-- CAMBIO 2: Especificamos la imagen pública
    # El resto de la configuración del proxy se hace con las reglas de Render
    # que son más sencillas y no requieren montar volúmenes.
    routes:
      - type: proxy
        source: /api/(.*)
        destination: http://backend:3000/$1
      - type: proxy
        source: /(.*)
        destination: http://frontend/$1
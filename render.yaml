# Blueprint de Render para la aplicación PRzone
# Versión final con dockerContext explícito y la sintaxis correcta para las URLs.

services:
  # 1. Servicio del Proxy Inverso (Nginx)
  - type: web
    name: proxy
    env: docker
    repo: https://github.com/GuilleAlvareez/PRzone-Completo
    dockerContext: ./nginx
    dockerfilePath: ./nginx/Dockerfile
    envVars:
      - key: PORT
        value: 80

  # 2. Servicio del Backend (Node.js)
  - type: web
    name: backend
    env: docker
    repo: https://github.com/GuilleAlvareez/PRzone-Completo
    dockerContext: ./backend
    dockerfilePath: ./backend/Dockerfile
    envVars:
      - key: NODE_ENV
        value: production
      - key: BETTER_AUTH_URL
        value: https://${proxy.RENDER_EXTERNAL_URL} # <-- FORMA CORRECTA
      - key: CLIENT_URL
        value: https://${proxy.RENDER_EXTERNAL_URL} # <-- FORMA CORRECTA
      - key: DB_HOST
        value: "aws.connect.psdb.cloud"
      - key: DB_PORT
        value: "3306"
      - key: DB_USER
        value: "p0eykwvk68h8pi7u5bia"
      - key: DB_NAME
        value: "przone"
      - key: model
        value: "mistralai/devstral-small:free"
      # --- CLAVES SECRETAS (configurar en el Dashboard de Render) ---
      - key: BETTER_AUTH_SECRET
        sync: false
      - key: API_KEY
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: DATABASE_URL
        sync: false

  # 3. Servicio del Frontend (React servido por Nginx)
  - type: web
    name: frontend
    env: docker
    repo: https://github.com/GuilleAlvareez/PRzone-Completo
    dockerContext: ./frontend
    dockerfilePath: ./frontend/Dockerfile